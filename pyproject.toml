[project]
name = "unfurl-service"
version = "0.1.0"
description = "Instagram link unfurl service for Slack"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "requests>=2.31.0",
    "httpx>=0.24.1",
    "beautifulsoup4>=4.12.2",
    "aws-lambda-powertools[parser]>=2.31.0",
    "boto3>=1.34.0",
    "aws-xray-sdk>=2.13.0",
    "zstandard>=0.21.0",
    "slack-sdk>=3.26.0",
    "soupsieve>=2.4.0",
    "typing-extensions>=4.7.0",
    "wrapt>=1.16.0",
    "annotated-types>=0.5.0",
    "orjson>=3.9.0",
    "python-dotenv>=0.21.0",
    "cachetools>=5.5.0",
    "pydantic>=2.4.0",
    "python-dateutil>=2.8.2",
    "aiohttp>=3.12.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "black>=24.3.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "bandit>=1.7.5",
    "isort>=5.13.0",
    "pre-commit>=3.5.0",
    "moto>=4.2.11,<5.0",
]
cdk = [
    "aws-cdk-lib>=2.110.0",
    "constructs>=10.3.0",
]
# Optional compression support - may not work in AWS Lambda due to C backend
compression = [
    "zstandard>=0.22.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | cdk.out
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
ignore_errors = true
plugins = []
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "requests.*",
    "bs4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.bandit]
targets = ["src"]
skip = ["B101", "B110", "B601"]
